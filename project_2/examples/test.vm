calling: nop
	start
	nop
	pushi 0
	pusha MAIN
	call
	nop
	dup 1
	not
	jz L0
	nop
	pop 1
	stop
L0:
	pushs "Exited with code "
	writes
	writei
	pushs "\n"
	writes
	stop
SWAPF:
	nop
	pushl -1
	pushl -1
	load 0
	pushl -2
	load 0
	mul
	store 0
	pushl -2
	pushl -1
	load 0
	pushl -2
	load 0
	div
	store 0
	pushl -1
	pushl -1
	load 0
	pushl -2
	load 0
	div
	store 0
	return
	nop
A:
	nop
	pushl -1
	pushi 0
	equal
	jz L3
	pushl -2
	pushi 1
	add
	storel -3
	jump L4
L3:
	pushl -2
	pushi 0
	equal
	jz L1
	pushi 0
	pushi 1
	pushl -1
	pushi 1
	sub
	pusha A
	call
	pop 2
	storel -3
	jump L2
L1:
	pushi 0
	pushi 0
	pushl -2
	pushi 1
	sub
	pushl -1
	pusha A
	call
	pop 2
	pushl -1
	pushi 1
	sub
	pusha A
	call
	pop 2
	storel -3
L2:
L4:
	return
	nop
BS:
	nop
	pushi 0
	pushi 0
	pushi 1
	storel 1
L8:
	pushl 1
	not
	not
	jz L9
	pushi 0
	storel 1
L6:
	pushl 0
	pushl -2
	pushi 1
	sub
	inf
	jz L7
	pushl -1
	pushl 0
	loadn
	pushl -1
	pushl 0
	pushi 1
	add
	loadn
	sup
	jz L5
	pushl -1
	pushl 0
	pushi 1
	add
	padd
	pushl -1
	pushl 0
	padd
	pusha SWAPF
	call
	pop 2
	pushi 1
	storel 1
L5:
	pushl 0
	pushi 1
	add
	storel 0
	jump L6
L7:
	jump L8
L9:
	pop 2
	return
	nop
F:
	nop
	pushi 0
	pushi 1
	storel -2
L10:
	pushl -1
	pushl 0
	sub
	pushi 0
	sup
	jz L11
	pushl 0
	pushi 1
	add
	storel 0
	pushl -2
	pushl 0
	mul
	storel -2
	jump L10
L11:
	pop 1
	return
	nop
MAIN:
	nop
	pushi 0
	pushfp
	pushi 2
	padd
	pushn 2
	pushl 1
	pushi 0
	pushi 10
	storen
	pushl 1
	pushi 1
	pushi 0
	pushi 25
	sub
	storen
	pushi 2
	pushl 1
	pusha BS
	call
	pop 2
	pushl 1
	pushi 0
	loadn
	writei
	pushs "\n"
	writes
	pushl 1
	pushi 1
	loadn
	writei
	pushs "\n"
	writes
	pushi 0
	pushi 1
	pushi 1
	pusha A
	call
	pop 2
	storel 0
	pushl 0
	writei
	pushs "\n"
	writes
	pushi 0
	pushi 2
	pusha F
	call
	pop 1
	storel 0
	pushl 0
	writei
	pushs "\n"
	writes
	pushi 0
	storel -1
	pop 4
	return
	nop


