calling: nop
	start
	nop
	pushi 0
	pusha MAIN
	call
	nop
	dup 1
	not
	jz L0
	nop
	pop 1
	stop
L0:
	pushs "Exited with code "
	writes
	writei
	pushs "\n"
	writes
	stop
ackermann:
	nop
	pushi 0
	pushl -1
	pushi 0
	pushsp
	pushi -2
	padd
	pushsp
	pushi -2
	padd
	load 0
	pushsp
	pushi -2
	padd
	load 0
	infeq
	store 0
	supeq
	mul
	jz L3
	pushl -2
	pushi 1
	add
	storel -3
	jump L4
L3:
	pushi 0
	pushl -2
	pushi 0
	pushsp
	pushi -2
	padd
	pushsp
	pushi -2
	padd
	load 0
	pushsp
	pushi -2
	padd
	load 0
	infeq
	store 0
	supeq
	mul
	jz L1
	pushi 0
	pushi 1
	pushl -1
	pushi 1
	sub
	pusha ackermann
	call
	pop 2
	storel -3
	jump L2
L1:
	pushi 0
	pushi 0
	pushl -2
	pushi 1
	sub
	pushl -1
	pusha ackermann
	call
	pop 2
	pushl -1
	pushi 1
	sub
	pusha ackermann
	call
	pop 2
	storel -3
L2:
L4:
	return
	nop
MAIN:
	nop
	pushi 0
	pushfp
	pushi 2
	padd
	pushn 5
	pushi 0
	pushfp
	pushi 8
	padd
	pushi 2
	pushi 0
	add
	padd
	pushfp
	pushi 9
	padd
	pushi 2
	pushi 1
	add
	padd
	pushn 4
	pushl 1
	pushi 0
	pushi 10
	storen
	pushl 1
	pushi 1
	pushi 1
	storen
	pushl 1
	pushi 2
	pushi 4
	storen
	pushl 1
	pushi 3
	pushi 5
	storen
	pushl 1
	pushi 4
	pushi 15
	storen
	pushl 8
	pushi 0
	padd
	pushi 0
	pushi 1
	storen
	pushl 8
	pushi 1
	padd
	pushi 0
	pushi 2
	storen
	pushl 8
	pushi 0
	padd
	pushi 1
	pushi 3
	storen
	pushl 8
	pushi 1
	padd
	pushi 1
	pushi 9
	storen
	pushi 0
	storel 0
	pushi 0
	pushi 20
	pushi 20
	pushsp
	pushi -2
	padd
	pushsp
	pushi -2
	padd
	load 0
	pushsp
	pushi -2
	padd
	load 0
	infeq
	store 0
	supeq
	mul
	jz L5
	pushi 0
	pushi 1
	pushi 0
	pusha ackermann
	call
	pop 2
	storel 0
	jump L6
L5:
	pushi 0
	pushi 0
	pushi 1
	pusha ackermann
	call
	pop 2
	storel 0
L6:
	pushs "\nHELLO\n"
	storel 7
	read
	writes
	pushl 7
	writes
	pushi 0
	storel -1
	pop 14
	return
	nop


